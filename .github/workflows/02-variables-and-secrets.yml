#! 🧩 Workflow Intermedio - Variables y Secrets en GitHub Actions
#
# PROPÓSITO:
#   Aprender a trabajar con:
#   - Variables de entorno (env)
#   - Secrets y valores sensibles
#   - Condicionales (if)
#   - Contextos de GitHub
#
# TRIGGER:
#   Se ejecuta en cada push o manualmente desde la interfaz de Actions
#
# NIVEL: 🟡 Intermedio
# --------------------------------------------------------------

name: 02 - Variables and Secrets

#! 📌 Eventos que activan este workflow
on: workflow_call
# on:
#   push:
#     branches:
#       # - main
#       - dev
#   workflow_dispatch:

#! 🧱 Definición de trabajos (jobs)
jobs:
  variables-demo:
    name: Variables y Secrets
    runs-on: ubuntu-latest

    # 🌍 Variables de entorno (accesibles para todos los pasos del job)
    env:
      ENVIRONMENT: development
      AUTHOR: "GitHub Actions"
      APP_VERSION: "1.0.0"

    steps:
      # Paso 1: Mostrar variables definidas en env
      - name: 🔧 Mostrar variables de entorno
        run: |
          echo "Entorno: $ENVIRONMENT"
          echo "Autor: $AUTHOR"
          echo "Versión: $APP_VERSION"

      # Paso 2: Mostrar variables del contexto de GitHub
      - name: 🔍 Mostrar contexto de GitHub
        run: |
          echo "Repositorio: ${{ github.repository }}"
          echo "Branch actual: ${{ github.ref_name }}"
          echo "Evento que disparó el workflow: ${{ github.event_name }}"
          echo "Commit SHA: ${{ github.sha }}"

      # Paso 3: Uso de secrets
      # 🔒 Los secrets se configuran desde:
      #     Settings → Secrets and variables → Actions → New repository secret
      - name: 🔐 Uso de secrets
        env:
          API_KEY: ${{ secrets.API_KEY }}
        run: |
          echo "Usando API_KEY (no se mostrará su valor por seguridad)"
          echo "Longitud aproximada: ${#API_KEY}"

      # Paso 4: Variables locales (definidas solo para este paso)
      - name: 🧠 Variables locales
        run: |
          TEMP_VAR="valor temporal"
          echo "Esta variable solo existe dentro de este paso: $TEMP_VAR"

      # Paso 5: Uso de expresiones condicionales
      - name: ⚙️ Condicionales básicas
        if: env.ENVIRONMENT == 'development'
        run: echo "✅ Este paso solo se ejecuta si el entorno es 'development'"

      - name: 🚫 Paso omitido en producción
        if: env.ENVIRONMENT == 'production'
        run: echo "❌ Este paso no se ejecutará en entorno de desarrollo"

      # Paso 6: Exportar una variable entre pasos usando outputs
      - name: 📤 Generar valor de salida
        id: generate
        run: echo "result=42" >> $GITHUB_OUTPUT

      - name: 📥 Leer variable generada en paso anterior
        run: |
          echo "El resultado del paso anterior fue: ${{ steps.generate.outputs.result }}"

      - name: ✅ Resumen | Workflow completado
        run: |
          echo "🎯 Workflow de variables y secrets ejecutado correctamente"
          echo "📘 Siguiente paso: explora 03-reusable-build.yml"
